# Generated by Django 5.2.4 on 2025-07-12 10:20

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('consultations', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DrugInteraction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('drug1', models.CharField(max_length=200)),
                ('drug2', models.CharField(max_length=200)),
                ('severity', models.CharField(choices=[('minor', 'Minor'), ('moderate', 'Moderate'), ('major', 'Major'), ('contraindicated', 'Contraindicated')], max_length=20)),
                ('description', models.TextField()),
                ('clinical_effect', models.TextField()),
                ('management', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Drug Interaction',
                'verbose_name_plural': 'Drug Interactions',
                'db_table': 'drug_interactions',
                'unique_together': {('drug1', 'drug2')},
            },
        ),
        migrations.CreateModel(
            name='Prescription',
            fields=[
                ('id', models.CharField(editable=False, max_length=20, primary_key=True, serialize=False, unique=True)),
                ('diagnosis', models.TextField()),
                ('symptoms', models.TextField(blank=True)),
                ('general_instructions', models.TextField(blank=True)),
                ('issued_date', models.DateField(auto_now_add=True)),
                ('valid_until', models.DateField()),
                ('status', models.CharField(choices=[('active', 'Active'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('expired', 'Expired')], default='active', max_length=20)),
                ('follow_up_required', models.BooleanField(default=False)),
                ('follow_up_date', models.DateField(blank=True, null=True)),
                ('follow_up_instructions', models.TextField(blank=True)),
                ('digital_signature', models.TextField(blank=True, help_text='Digital signature hash')),
                ('is_verified', models.BooleanField(default=False)),
                ('verification_code', models.CharField(blank=True, max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('consultation', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='prescription', to='consultations.consultation')),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prescribed_prescriptions', to=settings.AUTH_USER_MODEL)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prescriptions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Prescription',
                'verbose_name_plural': 'Prescriptions',
                'db_table': 'prescriptions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Medication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('generic_name', models.CharField(blank=True, max_length=200)),
                ('brand_name', models.CharField(blank=True, max_length=200)),
                ('strength', models.CharField(help_text='e.g., 500mg, 10ml', max_length=50)),
                ('dosage_form', models.CharField(choices=[('tablet', 'Tablet'), ('capsule', 'Capsule'), ('syrup', 'Syrup'), ('injection', 'Injection'), ('cream', 'Cream'), ('ointment', 'Ointment'), ('drops', 'Drops'), ('inhaler', 'Inhaler'), ('patch', 'Patch'), ('other', 'Other')], default='tablet', max_length=20)),
                ('dosage', models.CharField(help_text='e.g., 1 tablet, 5ml', max_length=100)),
                ('frequency', models.CharField(choices=[('once_daily', 'Once Daily'), ('twice_daily', 'Twice Daily'), ('thrice_daily', 'Thrice Daily'), ('four_times_daily', 'Four Times Daily'), ('every_4_hours', 'Every 4 Hours'), ('every_6_hours', 'Every 6 Hours'), ('every_8_hours', 'Every 8 Hours'), ('every_12_hours', 'Every 12 Hours'), ('as_needed', 'As Needed'), ('before_meals', 'Before Meals'), ('after_meals', 'After Meals'), ('at_bedtime', 'At Bedtime'), ('custom', 'Custom')], max_length=20)),
                ('custom_frequency', models.CharField(blank=True, help_text='For custom frequency', max_length=100)),
                ('timing', models.CharField(choices=[('before_food', 'Before Food'), ('after_food', 'After Food'), ('with_food', 'With Food'), ('empty_stomach', 'Empty Stomach'), ('anytime', 'Anytime')], default='after_food', max_length=20)),
                ('duration_days', models.PositiveIntegerField(help_text='Duration in days')),
                ('total_quantity', models.CharField(help_text='Total quantity to be dispensed', max_length=50)),
                ('special_instructions', models.TextField(blank=True)),
                ('side_effects_warning', models.TextField(blank=True)),
                ('substitution_allowed', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('prescription', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='medications', to='prescriptions.prescription')),
            ],
            options={
                'verbose_name': 'Medication',
                'verbose_name_plural': 'Medications',
                'db_table': 'prescription_medications',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='PrescriptionNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.TextField()),
                ('is_patient_visible', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('prescription', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notes', to='prescriptions.prescription')),
            ],
            options={
                'verbose_name': 'Prescription Note',
                'verbose_name_plural': 'Prescription Notes',
                'db_table': 'prescription_notes',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PrescriptionTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('condition', models.CharField(help_text='Medical condition this template is for', max_length=200)),
                ('template_data', models.JSONField(help_text='JSON data containing medication details')),
                ('usage_count', models.PositiveIntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prescription_templates', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Prescription Template',
                'verbose_name_plural': 'Prescription Templates',
                'db_table': 'prescription_templates',
                'ordering': ['-usage_count', 'name'],
            },
        ),
        migrations.CreateModel(
            name='MedicationAdherence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scheduled_date', models.DateField()),
                ('scheduled_time', models.TimeField()),
                ('actual_time', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('taken', 'Taken'), ('missed', 'Missed'), ('delayed', 'Delayed'), ('skipped', 'Skipped')], max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('side_effects_experienced', models.BooleanField(default=False)),
                ('side_effects_description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('medication', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='adherence_records', to='prescriptions.medication')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='medication_adherence', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Medication Adherence',
                'verbose_name_plural': 'Medication Adherence',
                'db_table': 'medication_adherence',
                'ordering': ['-scheduled_date', '-scheduled_time'],
                'unique_together': {('medication', 'patient', 'scheduled_date', 'scheduled_time')},
            },
        ),
        migrations.CreateModel(
            name='MedicationReminder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reminder_times', models.JSONField(default=list, help_text='List of reminder times')),
                ('is_active', models.BooleanField(default=True)),
                ('sms_enabled', models.BooleanField(default=True)),
                ('email_enabled', models.BooleanField(default=False)),
                ('push_enabled', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('medication', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reminders', to='prescriptions.medication')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='medication_reminders', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Medication Reminder',
                'verbose_name_plural': 'Medication Reminders',
                'db_table': 'medication_reminders',
                'unique_together': {('medication', 'patient')},
            },
        ),
    ]
