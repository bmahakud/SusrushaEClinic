# Generated by Django 5.2.4 on 2025-07-12 10:20

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('consultations', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Clinic',
            fields=[
                ('id', models.CharField(editable=False, max_length=20, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=200)),
                ('clinic_type', models.CharField(choices=[('hospital', 'Hospital'), ('clinic', 'Clinic'), ('diagnostic_center', 'Diagnostic Center'), ('specialty_center', 'Specialty Center'), ('virtual_clinic', 'Virtual Clinic')], default='clinic', max_length=20)),
                ('description', models.TextField(blank=True)),
                ('phone', models.CharField(max_length=17, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('email', models.EmailField(max_length=254)),
                ('website', models.URLField(blank=True)),
                ('street', models.CharField(max_length=255)),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=100)),
                ('pincode', models.CharField(max_length=10)),
                ('country', models.CharField(default='India', max_length=100)),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('operating_hours', models.JSONField(default=dict, help_text='Operating hours for each day of the week')),
                ('specialties', models.JSONField(default=list, help_text='List of medical specialties offered')),
                ('services', models.JSONField(default=list, help_text='List of services offered')),
                ('facilities', models.JSONField(default=list, help_text='List of facilities available')),
                ('emergency_services', models.BooleanField(default=False)),
                ('pharmacy_available', models.BooleanField(default=False)),
                ('lab_services', models.BooleanField(default=False)),
                ('registration_number', models.CharField(max_length=100, unique=True)),
                ('license_number', models.CharField(blank=True, max_length=100)),
                ('accreditation', models.CharField(blank=True, max_length=200)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='clinic_logos/')),
                ('cover_image', models.ImageField(blank=True, null=True, upload_to='clinic_covers/')),
                ('gallery_images', models.JSONField(default=list, help_text='List of gallery image URLs')),
                ('is_active', models.BooleanField(default=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('accepts_online_consultations', models.BooleanField(default=True)),
                ('accepts_walk_ins', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owned_clinics', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Clinic',
                'verbose_name_plural': 'Clinics',
                'db_table': 'clinics',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ClinicInventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_name', models.CharField(max_length=200)),
                ('category', models.CharField(choices=[('medicine', 'Medicine'), ('equipment', 'Medical Equipment'), ('supplies', 'Medical Supplies'), ('consumables', 'Consumables'), ('other', 'Other')], max_length=20)),
                ('description', models.TextField(blank=True)),
                ('brand', models.CharField(blank=True, max_length=100)),
                ('model_number', models.CharField(blank=True, max_length=100)),
                ('current_stock', models.PositiveIntegerField(default=0)),
                ('minimum_stock', models.PositiveIntegerField(default=0)),
                ('maximum_stock', models.PositiveIntegerField(default=0)),
                ('unit', models.CharField(default='pieces', max_length=20)),
                ('unit_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('selling_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('batch_number', models.CharField(blank=True, max_length=100)),
                ('expiry_date', models.DateField(blank=True, null=True)),
                ('supplier_name', models.CharField(blank=True, max_length=200)),
                ('supplier_contact', models.CharField(blank=True, max_length=100)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('clinic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inventory', to='eclinic.clinic')),
            ],
            options={
                'verbose_name': 'Clinic Inventory',
                'verbose_name_plural': 'Clinic Inventory',
                'db_table': 'clinic_inventory',
            },
        ),
        migrations.CreateModel(
            name='ClinicService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('category', models.CharField(choices=[('consultation', 'Consultation'), ('diagnostic', 'Diagnostic'), ('treatment', 'Treatment'), ('surgery', 'Surgery'), ('emergency', 'Emergency'), ('preventive', 'Preventive Care'), ('rehabilitation', 'Rehabilitation'), ('other', 'Other')], max_length=20)),
                ('description', models.TextField(blank=True)),
                ('base_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('price_range_min', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('price_range_max', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('is_available', models.BooleanField(default=True)),
                ('requires_appointment', models.BooleanField(default=True)),
                ('estimated_duration', models.PositiveIntegerField(blank=True, help_text='Duration in minutes', null=True)),
                ('preparation_required', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('clinic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='clinic_services', to='eclinic.clinic')),
            ],
            options={
                'verbose_name': 'Clinic Service',
                'verbose_name_plural': 'Clinic Services',
                'db_table': 'clinic_services',
            },
        ),
        migrations.CreateModel(
            name='ClinicDoctor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('consultant', 'Consultant'), ('resident', 'Resident'), ('visiting', 'Visiting Doctor'), ('head', 'Head of Department'), ('director', 'Medical Director')], default='consultant', max_length=20)),
                ('specialties', models.JSONField(default=list, help_text='Specialties practiced at this clinic')),
                ('consultation_fee', models.DecimalField(decimal_places=2, max_digits=10)),
                ('online_consultation_fee', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_primary_clinic', models.BooleanField(default=False)),
                ('weekly_schedule', models.JSONField(default=dict, help_text='Weekly schedule at this clinic')),
                ('joined_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('clinic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='clinic_doctors', to='eclinic.clinic')),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='clinic_associations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Clinic Doctor',
                'verbose_name_plural': 'Clinic Doctors',
                'db_table': 'clinic_doctors',
                'unique_together': {('clinic', 'doctor')},
            },
        ),
        migrations.CreateModel(
            name='ClinicReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('overall_rating', models.PositiveIntegerField()),
                ('review_text', models.TextField(blank=True)),
                ('cleanliness_rating', models.PositiveIntegerField(blank=True, null=True)),
                ('staff_rating', models.PositiveIntegerField(blank=True, null=True)),
                ('facilities_rating', models.PositiveIntegerField(blank=True, null=True)),
                ('wait_time_rating', models.PositiveIntegerField(blank=True, null=True)),
                ('is_approved', models.BooleanField(default=True)),
                ('is_anonymous', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('clinic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='eclinic.clinic')),
                ('consultation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='clinic_review', to='consultations.consultation')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='clinic_reviews', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Clinic Review',
                'verbose_name_plural': 'Clinic Reviews',
                'db_table': 'clinic_reviews',
                'ordering': ['-created_at'],
                'unique_together': {('clinic', 'patient', 'consultation')},
            },
        ),
        migrations.CreateModel(
            name='ClinicRoom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('room_number', models.CharField(max_length=20)),
                ('room_type', models.CharField(choices=[('consultation', 'Consultation Room'), ('procedure', 'Procedure Room'), ('emergency', 'Emergency Room'), ('icu', 'ICU'), ('operation_theater', 'Operation Theater'), ('lab', 'Laboratory'), ('pharmacy', 'Pharmacy'), ('reception', 'Reception'), ('waiting', 'Waiting Area'), ('other', 'Other')], max_length=20)),
                ('name', models.CharField(blank=True, max_length=100)),
                ('description', models.TextField(blank=True)),
                ('capacity', models.PositiveIntegerField(default=1)),
                ('equipment', models.JSONField(default=list, help_text='List of equipment in the room')),
                ('is_available', models.BooleanField(default=True)),
                ('is_bookable', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assigned_doctor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_rooms', to=settings.AUTH_USER_MODEL)),
                ('clinic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rooms', to='eclinic.clinic')),
            ],
            options={
                'verbose_name': 'Clinic Room',
                'verbose_name_plural': 'Clinic Rooms',
                'db_table': 'clinic_rooms',
                'unique_together': {('clinic', 'room_number')},
            },
        ),
        migrations.CreateModel(
            name='ClinicStaff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('receptionist', 'Receptionist'), ('nurse', 'Nurse'), ('technician', 'Technician'), ('pharmacist', 'Pharmacist'), ('admin', 'Administrator'), ('manager', 'Manager'), ('security', 'Security'), ('housekeeping', 'Housekeeping'), ('other', 'Other')], max_length=20)),
                ('department', models.CharField(blank=True, max_length=100)),
                ('responsibilities', models.TextField(blank=True)),
                ('employee_id', models.CharField(blank=True, max_length=50)),
                ('hire_date', models.DateField()),
                ('salary', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('work_schedule', models.JSONField(default=dict, help_text='Work schedule for the staff member')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('clinic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='staff', to='eclinic.clinic')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='staff_positions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Clinic Staff',
                'verbose_name_plural': 'Clinic Staff',
                'db_table': 'clinic_staff',
                'unique_together': {('clinic', 'user')},
            },
        ),
    ]
