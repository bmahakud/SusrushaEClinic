# Generated by Django 5.2.4 on 2025-07-10 12:04

import account.models
import datetime
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="DoctorSpecialization",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200, unique=True)),
                (
                    "description",
                    models.TextField(blank=True, max_length=1000, null=True),
                ),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="EClinicCenter",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(blank=True, max_length=300, null=True)),
                (
                    "clinic_id",
                    models.CharField(blank=True, max_length=50, null=True, unique=True),
                ),
                ("address", models.TextField(blank=True, max_length=1000, null=True)),
                ("city", models.CharField(blank=True, max_length=200, null=True)),
                ("state", models.CharField(blank=True, max_length=200, null=True)),
                ("country", models.CharField(blank=True, max_length=200, null=True)),
                ("pincode", models.CharField(blank=True, max_length=20, null=True)),
                ("phone", models.CharField(blank=True, max_length=20, null=True)),
                ("email", models.EmailField(blank=True, max_length=100, null=True)),
                ("website", models.URLField(blank=True, null=True)),
                (
                    "logo",
                    models.ImageField(blank=True, null=True, upload_to="clinic_logos/"),
                ),
                (
                    "description",
                    models.TextField(blank=True, max_length=5000, null=True),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="UserType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        choices=[
                            ("super_admin", "Super Admin"),
                            ("clinic_admin", "Clinic Admin"),
                            ("doctor", "Doctor"),
                            ("patient", "Patient"),
                        ],
                        max_length=50,
                        unique=True,
                    ),
                ),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Account",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "firstname",
                    models.CharField(
                        blank=True, default="", max_length=50, verbose_name="firstname"
                    ),
                ),
                (
                    "lastname",
                    models.CharField(
                        blank=True, default="", max_length=50, verbose_name="lastname"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True,
                        default=None,
                        max_length=60,
                        null=True,
                        verbose_name="email",
                    ),
                ),
                ("username", models.CharField(max_length=200, null=True, unique=True)),
                ("phoneno", models.CharField(max_length=20, null=True, unique=True)),
                (
                    "date_joined",
                    models.DateTimeField(auto_now_add=True, verbose_name="date joined"),
                ),
                (
                    "last_login",
                    models.DateTimeField(auto_now=True, verbose_name="last login"),
                ),
                ("is_admin", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(default=True)),
                ("is_staff", models.BooleanField(default=False)),
                ("is_superuser", models.BooleanField(default=False)),
                (
                    "profile_image",
                    models.ImageField(
                        blank=True,
                        default=account.models.get_default_profile_image,
                        max_length=255,
                        null=True,
                        upload_to="profile_images/",
                    ),
                ),
                (
                    "gender",
                    models.CharField(
                        blank=True, default="", max_length=20, verbose_name="gender"
                    ),
                ),
                (
                    "dateofbirth",
                    models.DateField(
                        blank=True,
                        default=datetime.date.today,
                        null=True,
                        verbose_name="dob",
                    ),
                ),
                ("address", models.TextField(blank=True, max_length=500, null=True)),
                (
                    "city",
                    models.CharField(
                        blank=True, default="", max_length=100, verbose_name="city"
                    ),
                ),
                (
                    "state",
                    models.CharField(
                        blank=True, default="", max_length=100, verbose_name="state"
                    ),
                ),
                (
                    "country",
                    models.CharField(
                        blank=True, default="", max_length=100, verbose_name="country"
                    ),
                ),
                ("pincode", models.CharField(blank=True, max_length=20, null=True)),
                ("about", models.TextField(blank=True, max_length=2000, null=True)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
                (
                    "usertype",
                    models.ForeignKey(
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="account.usertype",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="DoctorProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "license_number",
                    models.CharField(
                        blank=True, max_length=100, null=True, unique=True
                    ),
                ),
                ("experience_years", models.IntegerField(default=0)),
                (
                    "consultation_fee",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=10),
                ),
                (
                    "available_days",
                    models.CharField(
                        default="Monday,Tuesday,Wednesday,Thursday,Friday",
                        max_length=100,
                    ),
                ),
                (
                    "available_hours",
                    models.CharField(default="09:00-17:00", max_length=100),
                ),
                ("is_available", models.BooleanField(default=True)),
                (
                    "rating",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=3),
                ),
                ("total_reviews", models.IntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "account",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="doctor_profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "specializations",
                    models.ManyToManyField(
                        blank=True, to="account.doctorspecialization"
                    ),
                ),
                (
                    "clinic_center",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="doctors",
                        to="account.ecliniccenter",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="AppointmentSlot",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField()),
                ("start_time", models.TimeField()),
                ("end_time", models.TimeField()),
                ("is_available", models.BooleanField(default=True)),
                ("is_booked", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "doctor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="appointment_slots",
                        to="account.doctorprofile",
                    ),
                ),
            ],
            options={
                "ordering": ["date", "start_time"],
                "unique_together": {("doctor", "date", "start_time")},
            },
        ),
        migrations.CreateModel(
            name="AdminProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("role", models.CharField(default="Admin", max_length=100)),
                ("permissions", models.JSONField(blank=True, default=dict)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "account",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="admin_profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "clinic_center",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="admins",
                        to="account.ecliniccenter",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PatientProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "patient_id",
                    models.CharField(blank=True, max_length=50, null=True, unique=True),
                ),
                (
                    "emergency_contact_name",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "emergency_contact_phone",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                (
                    "emergency_contact_relation",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("blood_group", models.CharField(blank=True, max_length=10, null=True)),
                ("allergies", models.TextField(blank=True, max_length=1000, null=True)),
                (
                    "medical_history",
                    models.TextField(blank=True, max_length=5000, null=True),
                ),
                (
                    "current_medications",
                    models.TextField(blank=True, max_length=1000, null=True),
                ),
                (
                    "insurance_provider",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "insurance_number",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "account",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="patient_profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "clinic_center",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="patients",
                        to="account.ecliniccenter",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Appointment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "appointment_id",
                    models.CharField(blank=True, max_length=50, null=True, unique=True),
                ),
                ("reason", models.TextField(blank=True, max_length=1000, null=True)),
                ("symptoms", models.TextField(blank=True, max_length=1000, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("scheduled", "Scheduled"),
                            ("confirmed", "Confirmed"),
                            ("completed", "Completed"),
                            ("cancelled", "Cancelled"),
                            ("no_show", "No Show"),
                        ],
                        default="scheduled",
                        max_length=20,
                    ),
                ),
                ("notes", models.TextField(blank=True, max_length=2000, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "slot",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="appointments",
                        to="account.appointmentslot",
                    ),
                ),
                (
                    "doctor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="appointments",
                        to="account.doctorprofile",
                    ),
                ),
                (
                    "clinic_center",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="appointments",
                        to="account.ecliniccenter",
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="appointments",
                        to="account.patientprofile",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
    ]
